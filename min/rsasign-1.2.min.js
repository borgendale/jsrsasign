var _RE_HEXDECONLY=new RegExp("");_RE_HEXDECONLY.compile("[^0-9a-f]","gi");function _rsasign_getHexPaddedDigestInfoForString(s,keySize,hashAlg){var hashFunc=function(s){return KJUR.crypto.Util.hashString(s,hashAlg)};var sHashHex=hashFunc(s);return KJUR.crypto.Util.getPaddedDigestInfoHex(sHashHex,hashAlg,keySize)}function _zeroPaddingOfSignature(hex,bitLength){var s="";var nZero=bitLength/4-hex.length;for(var i=0;i<nZero;i++){s=s+"0"}return s+hex}RSAKey.prototype.sign=function(s,hashAlg){var hashFunc=function(s){return KJUR.crypto.Util.hashString(s,hashAlg)};var sHashHex=hashFunc(s);return this.signWithMessageHash(sHashHex,hashAlg)};RSAKey.prototype.signWithMessageHash=function(sHashHex,hashAlg){var hPM=KJUR.crypto.Util.getPaddedDigestInfoHex(sHashHex,hashAlg,this.n.bitLength());var biPaddedMessage=parseBigInt(hPM,16);var biSign=this.doPrivate(biPaddedMessage);var hexSign=biSign.toString(16);return _zeroPaddingOfSignature(hexSign,this.n.bitLength())};function pss_mgf1_str(seed,len,hash){var mask="",i=0;while(mask.length<len){mask+=hextorstr(hash(rstrtohex(seed+String.fromCharCode.apply(String,[(i&4278190080)>>24,(i&16711680)>>16,(i&65280)>>8,i&255]))));i+=1}return mask}RSAKey.prototype.signPSS=function(s,hashAlg,sLen){var hashFunc=function(sHex){return KJUR.crypto.Util.hashHex(sHex,hashAlg)};var hHash=hashFunc(rstrtohex(s));if(sLen===undefined)sLen=-1;return this.signWithMessageHashPSS(hHash,hashAlg,sLen)};RSAKey.prototype.signWithMessageHashPSS=function(hHash,hashAlg,sLen){var mHash=hextorstr(hHash);var hLen=mHash.length;var emBits=this.n.bitLength()-1;var emLen=Math.ceil(emBits/8);var i;var hashFunc=function(sHex){return KJUR.crypto.Util.hashHex(sHex,hashAlg)};if(sLen===-1||sLen===undefined){sLen=hLen}else if(sLen===-2){sLen=emLen-hLen-2}else if(sLen<-2){throw"invalid salt length"}if(emLen<hLen+sLen+2){throw"data too long"}var salt="";if(sLen>0){salt=new Array(sLen);(new SecureRandom).nextBytes(salt);salt=String.fromCharCode.apply(String,salt)}var H=hextorstr(hashFunc(rstrtohex("\0\0\0\0\0\0\0\0"+mHash+salt)));var PS=[];for(i=0;i<emLen-sLen-hLen-2;i+=1){PS[i]=0}var DB=String.fromCharCode.apply(String,PS)+""+salt;var dbMask=pss_mgf1_str(H,DB.length,hashFunc);var maskedDB=[];for(i=0;i<DB.length;i+=1){maskedDB[i]=DB.charCodeAt(i)^dbMask.charCodeAt(i)}var mask=65280>>8*emLen-emBits&255;maskedDB[0]&=~mask;for(i=0;i<hLen;i++){maskedDB.push(H.charCodeAt(i))}maskedDB.push(188);return _zeroPaddingOfSignature(this.doPrivate(new BigInteger(maskedDB)).toString(16),this.n.bitLength())};function _rsasign_getDecryptSignatureBI(biSig,hN,hE){var rsa=new RSAKey;rsa.setPublic(hN,hE);var biDecryptedSig=rsa.doPublic(biSig);return biDecryptedSig}function _rsasign_getHexDigestInfoFromSig(biSig,hN,hE){var biDecryptedSig=_rsasign_getDecryptSignatureBI(biSig,hN,hE);var hDigestInfo=biDecryptedSig.toString(16).replace(/^1f+00/,"");return hDigestInfo}function _rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo){for(var algName in KJUR.crypto.Util.DIGESTINFOHEAD){var head=KJUR.crypto.Util.DIGESTINFOHEAD[algName];var len=head.length;if(hDigestInfo.substring(0,len)==head){var a=[algName,hDigestInfo.substring(len)];return a}}return[]}RSAKey.prototype.verify=function(sMsg,hSig){hSig=hSig.replace(_RE_HEXDECONLY,"");hSig=hSig.replace(/[ \n]+/g,"");var biSig=parseBigInt(hSig,16);if(biSig.bitLength()>this.n.bitLength())return 0;var biDecryptedSig=this.doPublic(biSig);var hDigestInfo=biDecryptedSig.toString(16).replace(/^1f+00/,"");var digestInfoAry=_rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo);if(digestInfoAry.length==0)return false;var algName=digestInfoAry[0];var diHashValue=digestInfoAry[1];var ff=function(s){return KJUR.crypto.Util.hashString(s,algName)};var msgHashValue=ff(sMsg);return diHashValue==msgHashValue};RSAKey.prototype.verifyWithMessageHash=function(sHashHex,hSig){hSig=hSig.replace(_RE_HEXDECONLY,"");hSig=hSig.replace(/[ \n]+/g,"");var biSig=parseBigInt(hSig,16);if(biSig.bitLength()>this.n.bitLength())return 0;var biDecryptedSig=this.doPublic(biSig);var hDigestInfo=biDecryptedSig.toString(16).replace(/^1f+00/,"");var digestInfoAry=_rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo);if(digestInfoAry.length==0)return false;var algName=digestInfoAry[0];var diHashValue=digestInfoAry[1];return diHashValue==sHashHex};RSAKey.prototype.verifyPSS=function(sMsg,hSig,hashAlg,sLen){var hashFunc=function(sHex){return KJUR.crypto.Util.hashHex(sHex,hashAlg)};var hHash=hashFunc(rstrtohex(sMsg));if(sLen===undefined)sLen=-1;return this.verifyWithMessageHashPSS(hHash,hSig,hashAlg,sLen)};RSAKey.prototype.verifyWithMessageHashPSS=function(hHash,hSig,hashAlg,sLen){var biSig=new BigInteger(hSig,16);if(biSig.bitLength()>this.n.bitLength()){return false}var hashFunc=function(sHex){return KJUR.crypto.Util.hashHex(sHex,hashAlg)};var mHash=hextorstr(hHash);var hLen=mHash.length;var emBits=this.n.bitLength()-1;var emLen=Math.ceil(emBits/8);var i;if(sLen===-1||sLen===undefined){sLen=hLen}else if(sLen===-2){sLen=emLen-hLen-2}else if(sLen<-2){throw"invalid salt length"}if(emLen<hLen+sLen+2){throw"data too long"}var em=this.doPublic(biSig).toByteArray();for(i=0;i<em.length;i+=1){em[i]&=255}while(em.length<emLen){em.unshift(0)}if(em[emLen-1]!==188){throw"encoded message does not end in 0xbc"}em=String.fromCharCode.apply(String,em);var maskedDB=em.substr(0,emLen-hLen-1);var H=em.substr(maskedDB.length,hLen);var mask=65280>>8*emLen-emBits&255;if((maskedDB.charCodeAt(0)&mask)!==0){throw"bits beyond keysize not zero"}var dbMask=pss_mgf1_str(H,maskedDB.length,hashFunc);var DB=[];for(i=0;i<maskedDB.length;i+=1){DB[i]=maskedDB.charCodeAt(i)^dbMask.charCodeAt(i)}DB[0]&=~mask;var checkLen=emLen-hLen-sLen-2;for(i=0;i<checkLen;i+=1){if(DB[i]!==0){throw"leftmost octets not zero"}}if(DB[checkLen]!==1){throw"0x01 marker not found"}return H===hextorstr(hashFunc(rstrtohex("\0\0\0\0\0\0\0\0"+mHash+String.fromCharCode.apply(String,DB.slice(-sLen)))))};RSAKey.SALT_LEN_HLEN=-1;RSAKey.SALT_LEN_MAX=-2;RSAKey.SALT_LEN_RECOVER=-2;