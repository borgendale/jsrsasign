if(typeof KJUR=="undefined"||!KJUR)KJUR={};if(typeof KJUR.crypto=="undefined"||!KJUR.crypto)KJUR.crypto={};KJUR.crypto.ECDSA=function(params){var curveName="secp256r1";var ecparams=null;var prvKeyHex=null;var pubKeyHex=null;var rng=new SecureRandom;var P_OVER_FOUR=null;this.type="EC";this.isPrivate=false;this.isPublic=false;function implShamirsTrick(P,k,Q,l){var m=Math.max(k.bitLength(),l.bitLength());var Z=P.add2D(Q);var R=P.curve.getInfinity();for(var i=m-1;i>=0;--i){R=R.twice2D();R.z=BigInteger.ONE;if(k.testBit(i)){if(l.testBit(i)){R=R.add2D(Z)}else{R=R.add2D(P)}}else{if(l.testBit(i)){R=R.add2D(Q)}}}return R}this.getBigRandom=function(limit){return new BigInteger(limit.bitLength(),rng).mod(limit.subtract(BigInteger.ONE)).add(BigInteger.ONE)};this.setNamedCurve=function(curveName){this.ecparams=KJUR.crypto.ECParameterDB.getByName(curveName);this.prvKeyHex=null;this.pubKeyHex=null;this.curveName=curveName};this.setPrivateKeyHex=function(prvKeyHex){this.isPrivate=true;this.prvKeyHex=prvKeyHex};this.setPublicKeyHex=function(pubKeyHex){this.isPublic=true;this.pubKeyHex=pubKeyHex};this.getPublicKeyXYHex=function(){var h=this.pubKeyHex;if(h.substr(0,2)!=="04")throw"this method supports uncompressed format(04) only";var charlen=this.ecparams.keylen/4;if(h.length!==2+charlen*2)throw"malformed public key hex length";var result={};result.x=h.substr(2,charlen);result.y=h.substr(2+charlen);return result};this.getShortNISTPCurveName=function(){var s=this.curveName;if(s==="secp256r1"||s==="NIST P-256"||s==="P-256"||s==="prime256v1")return"P-256";if(s==="secp384r1"||s==="NIST P-384"||s==="P-384")return"P-384";return null};this.generateKeyPairHex=function(){var biN=this.ecparams["n"];var biPrv=this.getBigRandom(biN);var epPub=this.ecparams["G"].multiply(biPrv);var biX=epPub.getX().toBigInteger();var biY=epPub.getY().toBigInteger();var charlen=this.ecparams["keylen"]/4;var hPrv=("0000000000"+biPrv.toString(16)).slice(-charlen);var hX=("0000000000"+biX.toString(16)).slice(-charlen);var hY=("0000000000"+biY.toString(16)).slice(-charlen);var hPub="04"+hX+hY;this.setPrivateKeyHex(hPrv);this.setPublicKeyHex(hPub);return{ecprvhex:hPrv,ecpubhex:hPub}};this.signWithMessageHash=function(hashHex){return this.signHex(hashHex,this.prvKeyHex)};this.signHex=function(hashHex,privHex){var d=new BigInteger(privHex,16);var n=this.ecparams["n"];var e=new BigInteger(hashHex,16);do{var k=this.getBigRandom(n);var G=this.ecparams["G"];var Q=G.multiply(k);var r=Q.getX().toBigInteger().mod(n)}while(r.compareTo(BigInteger.ZERO)<=0);var s=k.modInverse(n).multiply(e.add(d.multiply(r))).mod(n);return KJUR.crypto.ECDSA.biRSSigToASN1Sig(r,s)};this.sign=function(hash,priv){var d=priv;var n=this.ecparams["n"];var e=BigInteger.fromByteArrayUnsigned(hash);do{var k=this.getBigRandom(n);var G=this.ecparams["G"];var Q=G.multiply(k);var r=Q.getX().toBigInteger().mod(n)}while(r.compareTo(BigInteger.ZERO)<=0);var s=k.modInverse(n).multiply(e.add(d.multiply(r))).mod(n);return this.serializeSig(r,s)};this.verifyWithMessageHash=function(hashHex,sigHex){return this.verifyHex(hashHex,sigHex,this.pubKeyHex)};this.verifyHex=function(hashHex,sigHex,pubkeyHex){var r,s;var obj=KJUR.crypto.ECDSA.parseSigHex(sigHex);r=obj.r;s=obj.s;var Q;Q=ECPointFp.decodeFromHex(this.ecparams["curve"],pubkeyHex);var e=new BigInteger(hashHex,16);return this.verifyRaw(e,r,s,Q)};this.verify=function(hash,sig,pubkey){var r,s;if(Bitcoin.Util.isArray(sig)){var obj=this.parseSig(sig);r=obj.r;s=obj.s}else if("object"===typeof sig&&sig.r&&sig.s){r=sig.r;s=sig.s}else{throw"Invalid value for signature"}var Q;if(pubkey instanceof ECPointFp){Q=pubkey}else if(Bitcoin.Util.isArray(pubkey)){Q=ECPointFp.decodeFrom(this.ecparams["curve"],pubkey)}else{throw"Invalid format for pubkey value, must be byte array or ECPointFp"}var e=BigInteger.fromByteArrayUnsigned(hash);return this.verifyRaw(e,r,s,Q)};this.verifyRaw=function(e,r,s,Q){var n=this.ecparams["n"];var G=this.ecparams["G"];if(r.compareTo(BigInteger.ONE)<0||r.compareTo(n)>=0)return false;if(s.compareTo(BigInteger.ONE)<0||s.compareTo(n)>=0)return false;var c=s.modInverse(n);var u1=e.multiply(c).mod(n);var u2=r.multiply(c).mod(n);var point=G.multiply(u1).add(Q.multiply(u2));var v=point.getX().toBigInteger().mod(n);return v.equals(r)};this.serializeSig=function(r,s){var rBa=r.toByteArraySigned();var sBa=s.toByteArraySigned();var sequence=[];sequence.push(2);sequence.push(rBa.length);sequence=sequence.concat(rBa);sequence.push(2);sequence.push(sBa.length);sequence=sequence.concat(sBa);sequence.unshift(sequence.length);sequence.unshift(48);return sequence};this.parseSig=function(sig){var cursor;if(sig[0]!=48)throw new Error("Signature not a valid DERSequence");cursor=2;if(sig[cursor]!=2)throw new Error("First element in signature must be a DERInteger");var rBa=sig.slice(cursor+2,cursor+2+sig[cursor+1]);cursor+=2+sig[cursor+1];if(sig[cursor]!=2)throw new Error("Second element in signature must be a DERInteger");var sBa=sig.slice(cursor+2,cursor+2+sig[cursor+1]);cursor+=2+sig[cursor+1];var r=BigInteger.fromByteArrayUnsigned(rBa);var s=BigInteger.fromByteArrayUnsigned(sBa);return{r:r,s:s}};this.parseSigCompact=function(sig){if(sig.length!==65){throw"Signature has the wrong length"}var i=sig[0]-27;if(i<0||i>7){throw"Invalid signature type"}var n=this.ecparams["n"];var r=BigInteger.fromByteArrayUnsigned(sig.slice(1,33)).mod(n);var s=BigInteger.fromByteArrayUnsigned(sig.slice(33,65)).mod(n);return{r:r,s:s,i:i}};this.readPKCS5PrvKeyHex=function(h){var _ASN1HEX=ASN1HEX;var _getName=KJUR.crypto.ECDSA.getName;var _getVbyList=_ASN1HEX.getVbyList;if(_ASN1HEX.isASN1HEX(h)===false)throw"not ASN.1 hex string";var hCurve,hPrv,hPub;try{hCurve=_getVbyList(h,0,[2,0],"06");hPrv=_getVbyList(h,0,[1],"04");try{hPub=_getVbyList(h,0,[3,0],"03").substr(2)}catch(ex){}}catch(ex){throw"malformed PKCS#1/5 plain ECC private key"}this.curveName=_getName(hCurve);if(this.curveName===undefined)throw"unsupported curve name";this.setNamedCurve(this.curveName);this.setPublicKeyHex(hPub);this.setPrivateKeyHex(hPrv);this.isPublic=false};this.readPKCS8PrvKeyHex=function(h){var _ASN1HEX=ASN1HEX;var _getName=KJUR.crypto.ECDSA.getName;var _getVbyList=_ASN1HEX.getVbyList;if(_ASN1HEX.isASN1HEX(h)===false)throw"not ASN.1 hex string";var hECOID,hCurve,hPrv,hPub;try{hECOID=_getVbyList(h,0,[1,0],"06");hCurve=_getVbyList(h,0,[1,1],"06");hPrv=_getVbyList(h,0,[2,0,1],"04");try{hPub=_getVbyList(h,0,[2,0,2,0],"03").substr(2)}catch(ex){}}catch(ex){throw"malformed PKCS#8 plain ECC private key"}this.curveName=_getName(hCurve);if(this.curveName===undefined)throw"unsupported curve name";this.setNamedCurve(this.curveName);this.setPublicKeyHex(hPub);this.setPrivateKeyHex(hPrv);this.isPublic=false};this.readPKCS8PubKeyHex=function(h){var _ASN1HEX=ASN1HEX;var _getName=KJUR.crypto.ECDSA.getName;var _getVbyList=_ASN1HEX.getVbyList;if(_ASN1HEX.isASN1HEX(h)===false)throw"not ASN.1 hex string";var hECOID,hCurve,hPub;try{hECOID=_getVbyList(h,0,[0,0],"06");hCurve=_getVbyList(h,0,[0,1],"06");hPub=_getVbyList(h,0,[1],"03").substr(2)}catch(ex){throw"malformed PKCS#8 ECC public key"}this.curveName=_getName(hCurve);if(this.curveName===null)throw"unsupported curve name";this.setNamedCurve(this.curveName);this.setPublicKeyHex(hPub)};this.readCertPubKeyHex=function(h,nthPKI){if(nthPKI!==5)nthPKI=6;var _ASN1HEX=ASN1HEX;var _getName=KJUR.crypto.ECDSA.getName;var _getVbyList=_ASN1HEX.getVbyList;if(_ASN1HEX.isASN1HEX(h)===false)throw"not ASN.1 hex string";var hCurve,hPub;try{hCurve=_getVbyList(h,0,[0,nthPKI,0,1],"06");hPub=_getVbyList(h,0,[0,nthPKI,1],"03").substr(2)}catch(ex){throw"malformed X.509 certificate ECC public key"}this.curveName=_getName(hCurve);if(this.curveName===null)throw"unsupported curve name";this.setNamedCurve(this.curveName);this.setPublicKeyHex(hPub)};if(params!==undefined){if(params["curve"]!==undefined){this.curveName=params["curve"]}}if(this.curveName===undefined)this.curveName=curveName;this.setNamedCurve(this.curveName);if(params!==undefined){if(params.prv!==undefined)this.setPrivateKeyHex(params.prv);if(params.pub!==undefined)this.setPublicKeyHex(params.pub)}};KJUR.crypto.ECDSA.parseSigHex=function(sigHex){var p=KJUR.crypto.ECDSA.parseSigHexInHexRS(sigHex);var biR=new BigInteger(p.r,16);var biS=new BigInteger(p.s,16);return{r:biR,s:biS}};KJUR.crypto.ECDSA.parseSigHexInHexRS=function(sigHex){var _ASN1HEX=ASN1HEX;var _getChildIdx=_ASN1HEX.getChildIdx;var _getV=_ASN1HEX.getV;if(sigHex.substr(0,2)!="30")throw"signature is not a ASN.1 sequence";var a=_getChildIdx(sigHex,0);if(a.length!=2)throw"number of signature ASN.1 sequence elements seem wrong";var iTLV1=a[0];var iTLV2=a[1];if(sigHex.substr(iTLV1,2)!="02")throw"1st item of sequene of signature is not ASN.1 integer";if(sigHex.substr(iTLV2,2)!="02")throw"2nd item of sequene of signature is not ASN.1 integer";var hR=_getV(sigHex,iTLV1);var hS=_getV(sigHex,iTLV2);return{r:hR,s:hS}};KJUR.crypto.ECDSA.asn1SigToConcatSig=function(asn1Sig){var pSig=KJUR.crypto.ECDSA.parseSigHexInHexRS(asn1Sig);var hR=pSig.r;var hS=pSig.s;if(hR.substr(0,2)=="00"&&hR.length%32==2)hR=hR.substr(2);if(hS.substr(0,2)=="00"&&hS.length%32==2)hS=hS.substr(2);if(hR.length%32==30)hR="00"+hR;if(hS.length%32==30)hS="00"+hS;if(hR.length%32!=0)throw"unknown ECDSA sig r length error";if(hS.length%32!=0)throw"unknown ECDSA sig s length error";return hR+hS};KJUR.crypto.ECDSA.concatSigToASN1Sig=function(concatSig){if(concatSig.length/2*8%(16*8)!=0)throw"unknown ECDSA concatinated r-s sig  length error";var hR=concatSig.substr(0,concatSig.length/2);var hS=concatSig.substr(concatSig.length/2);return KJUR.crypto.ECDSA.hexRSSigToASN1Sig(hR,hS)};KJUR.crypto.ECDSA.hexRSSigToASN1Sig=function(hR,hS){var biR=new BigInteger(hR,16);var biS=new BigInteger(hS,16);return KJUR.crypto.ECDSA.biRSSigToASN1Sig(biR,biS)};KJUR.crypto.ECDSA.biRSSigToASN1Sig=function(biR,biS){var _KJUR_asn1=KJUR.asn1;var derR=new _KJUR_asn1.DERInteger({bigint:biR});var derS=new _KJUR_asn1.DERInteger({bigint:biS});var derSeq=new _KJUR_asn1.DERSequence({array:[derR,derS]});return derSeq.getEncodedHex()};KJUR.crypto.ECDSA.getName=function(s){if(s==="2a8648ce3d030107")return"secp256r1";if(s==="2b8104000a")return"secp256k1";if(s==="2b81040022")return"secp384r1";if(s==="2b81040023")return"secp521r1";if("|secp256r1|NIST P-256|P-256|prime256v1|".indexOf(s)!==-1)return"secp256r1";if("|secp256k1|".indexOf(s)!==-1)return"secp256k1";if("|secp384r1|NIST P-384|P-384|".indexOf(s)!==-1)return"secp384r1";if("|secp521r1|NIST P-521|P-521|".indexOf(s)!==-1)return"secp521r1";return null};